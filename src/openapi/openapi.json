{
  "openapi": "3.0.0",
  "info": {
    "description": "This is the API that serves as the central interaction point between the client and back-end services of Earthdata Pub.",
    "version": "1.0.0",
    "title": "EarthdataPub",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "brian.ellingson@uah.edu"
    }
  },
  "tags": [
    {
      "name": "data",
      "description": "Fetch questions, forms, workflows",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "notification",
      "description": "Interact with the notification system. Send a note, subscribe or unsubscribe to events.",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "model",
      "description": "Retrieve JSON schema models",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "action",
      "description": "Interact with the action system. Invoke an action, or register a custom action.",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "submission",
      "description": "Manage submissions, fill forms, review.",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "metrics",
      "description": "Retrieve system metrics or submit client side events to be logged.",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "auth",
      "description": "Authentication endpoint.",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "version",
      "description": "Retrieve version of the API.",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "applications",
      "description": "Serves static files for frontend applications.",
      "externalDocs": {
        "description": "Read the docs",
        "url": "http://database.docs/#TODO"
      }
    },
    {
      "name": "cors",
      "description": "CORS"
    }
  ],
  "paths": {
    "/api/data/action/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get action",
        "description": "Returns a single action by ID",
        "operationId": "actionFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"action\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataAction",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/actions": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get actions",
        "description": "Returns list of actions",
        "operationId": "actionFindAll",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"action\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataActions",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/daac/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get DAAC",
        "description": "Returns a single DAAC by ID",
        "operationId": "daacFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DAAC"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"daac\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataDaac",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/daacs": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get DAACs",
        "description": "Returns list of DAACs",
        "operationId": "daacFindAll",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"daac\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataDaacs",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/form/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        {
          "name": "daac_id",
          "in": "query",
          "description": "DAAC ID to filter form sections",
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get form",
        "description": "Returns a single form by ID",
        "operationId": "formFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"form\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataForm",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/forms": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get forms",
        "description": "Returns list of forms",
        "operationId": "formFindAll",
        "parameters": [
          {
            "name": "short_name",
            "in": "query",
            "description": "The short_name field of the form.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "The version of the form.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long_name",
            "in": "query",
            "description": "The long_name field of the form.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "description": "Minimum datetime for narrowing results by creation time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "description": "Maximum datetime for narrowing results by creation time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Form"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"form\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Create or update an form",
        "description": "Create a new form or update an existing form",
        "operationId": "formPut",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataForms",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/group/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get group",
        "description": "Returns a single group by ID",
        "operationId": "groupFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"group\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataGroup",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/groups": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get groups",
        "description": "Returns list of groups",
        "operationId": "groupFindAll",
        "parameters": [
          {
            "name": "short_name",
            "in": "query",
            "description": "Short name to search for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long_name",
            "in": "query",
            "description": "Long name to search for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"group\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataGroups",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/role/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get role",
        "description": "Returns a single role by ID",
        "operationId": "roleFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"role\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataRole",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/roles": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get roles",
        "description": "Returns list of roles",
        "operationId": "roleFindAll",
        "parameters": [
          {
            "name": "short_name",
            "in": "query",
            "description": "Short name to search for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long_name",
            "in": "query",
            "description": "Long name to search for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"role\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataRoles",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/note/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get note",
        "description": "Returns a single note by ID",
        "operationId": "noteFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"note\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataNote",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/notes": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get notes",
        "description": "Returns list of notes",
        "operationId": "noteFindAll",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"note\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataNotes",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/pages": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Create or update a page",
        "description": "Create a new page or update an existing page",
        "operationId": "pagePut",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Page"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Service_Authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "{\"resource\":\"page\",\"operation\":\"update\",\"params\":{\"payload\": $input.json(\"$\")},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataPages",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/question/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get question",
        "description": "Returns a single question by ID",
        "operationId": "questionFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${questions_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"question\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Update a question",
        "description": "Updates an existing question.",
        "operationId": "questionUpdate",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${questions_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "{\"resource\":\"question\",\"operation\":\"update\",\"params\":{\"payload\": $input.json(\"$\")},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataQuestion",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/question/{id}/inputs": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Add/Update a question's inputs",
        "description": "Add/Update a question's inputs",
        "operationId": "questionInputUpdate",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${questions_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"question\",\"operation\":\"updateInputs\",\"params\":{\"inputs\": $input.json(\"$\"), \"questionId\": \"$req.path.get(\"id\")\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataQuestion",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/service/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get service",
        "description": "Returns a single service by ID",
        "operationId": "serviceFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"service\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataService",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/services": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get services",
        "description": "Returns list of services",
        "operationId": "serviceFindAll",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"service\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataServices",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/submission/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get submission",
        "description": "Returns a single submission by ID",
        "operationId": "submissionFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"submission\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataSubmission",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/submissions": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get submissions",
        "description": "Returns list of submissions",
        "operationId": "submissionFindAll",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name of the submission, this typically the same as the data product name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The unique id of the user who initiated the submission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daac_id",
            "in": "query",
            "description": "The unique id of the DAAC the submission has been assigned to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflow_id",
            "in": "query",
            "description": "The unique id of the current workflow of the submission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflow_name",
            "in": "query",
            "description": "The long_name field of the current workflow of the submission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "step_name",
            "in": "query",
            "description": "The name/key of the current step of the current workflow of the submission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "step_type",
            "in": "query",
            "description": "The type of the current step of the current workflow of the submission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status message of the submission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "description": "Minimum datetime for narrowing results by creation time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "description": "Maximum datetime for narrowing results by creation time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_change_after",
            "in": "query",
            "description": "Minimum datetime for narrowing results by most recent activity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_change_before",
            "in": "query",
            "description": "Maximum datetime for narrowing results by most recent activity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hidden",
            "in": "query",
            "description": "Descriptor as to whether or not this submission is withdrawn.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"submission\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataSubmissions",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/submission/operation/{operation}": {
      "parameters": [
        {
          "name": "operation",
          "in": "path",
          "description": "Which submission operation to perform.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["initialize", "active", "inactive", "apply", "metadata", "submit", "save", "review", "resume", "lock",
              "unlock", "withdraw", "restore", "changeStep", "addContributors", "removeContributor", "copySubmission"]
          }
        }
      ],
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Perform an operation on a Submission.",
        "description": "Perform an operation for a Submission, i.e. initialize, save, submit, review.",
        "operationId": "submissionOperation",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOperationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${submission_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) #set($inputRoot = $input.path('$')) {\"operation\":\"$req.path.get('operation')\", #if($body.containsKey('id'))\"id\":\"$body.get('id')\",#end #if($body.containsKey('form_id'))\"form_id\":\"$body.get('form_id')\",#end #if($body.containsKey('daac_id'))\"daac_id\":\"$body.get('daac_id')\",#end #if($body.containsKey('workflow_id'))\"workflow_id\":\"$body.get('workflow_id')\",#end #if($body.containsKey('contributor_id'))\"contributor_id\":\"$body.get('contributor_id')\",#end #if ($body.containsKey('contributor_ids'))\"contributor_ids\":$inputRoot.contributor_ids, #end #if ($body.containsKey('copy_filter'))\"copy_filter\":$inputRoot.copy_filter, #end #if ($body.containsKey('data'))\"data\":$input.json('$.data'), #end #if($body.containsKey('metadata'))\"metadata\":$input.json('$.metadata'), #end #if($body.containsKey('approve'))\"approve\":\"$body.get('approve')\", #end #if($body.containsKey('context'))\"context\":\"$body.get('context')\", #end #if($body.containsKey('step_name'))\"step_name\":\"$body.get('step_name')\", #end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsSubmission",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/user/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get user",
        "description": "Returns a single user by ID",
        "operationId": "userFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"user\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataUser",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/users": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get users",
        "description": "Returns list of users",
        "operationId": "userFindAll",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Search names using postgres",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Search emails using postgres ilike",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"user\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataUsers",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/workflow/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of entity",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get workflow",
        "description": "Returns a single workflow by ID",
        "operationId": "workflowFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"workflow\",\"operation\":\"findById\",\"params\":{\"id\": \"$req.path.get('id')\"},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Edit workflow",
        "description": "Edit different aspects of a workflow",
        "operationId": "editWorkflow",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${workflow_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) {\"operation\":\"editWorkflow\",\"params\":{#if($body.containsKey('id'))\"id\":\"$body.get('id')\", #end #if($body.containsKey('version'))\"version\":\"$body.get('version')\", #end #if($body.containsKey('description'))\"description\":\"$body.get('description')\", #end #if($body.containsKey('steps'))\"steps\":$input.json('$.steps')#end}, \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataWorkflow",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/workflows": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get workflows",
        "description": "Returns list of workflows",
        "operationId": "workflowFindAll",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"workflow\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Creates a workflow",
        "description": "Creates a new workflow",
        "operationId": "createWorkflow",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${workflow_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates":{
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) {\"model\": \"$req.path.get('model')\", \"operation\":\"editWorkflow\",\"params\":{#if($body.containsKey('short_name'))\"short_name\":\"$body.get('short_name')\", #end #if($body.containsKey('version'))\"version\":\"$body.get('version')\", #end #if ($body.containsKey('long_name'))\"long_name\":\"$body.get('long_name')\", #end #if($body.containsKey('description'))\"description\":\"$body.get('description')\", #end #if($body.containsKey('steps'))\"steps\":$input.json('$.steps')#end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataWorkflows",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/model/{model}": {
      "parameters": [
        {
          "name": "model",
          "in": "path",
          "description": "Name of JSON schema model to retrieve",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "model"
        ],
        "summary": "Get model",
        "description": "Returns a single note by ID",
        "operationId": "getModel",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${model_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"model\": \"$req.path.get('model')\",\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsModel",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/notification/send": {
      "post": {
        "tags": [
          "notification"
        ],
        "summary": "Send a note to user(s)",
        "description": "Send a note to a user or group of users.",
        "operationId": "notificationSend",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${notification_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) {\"operation\": \"send\", \"text\":\"$body.get('text')\", #if($body.containsKey('subject'))\"subject\":\"$body.get('subject')\",#end #if($body.containsKey('user_list'))\"user_list\":$input.json('$.user_list'),#end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsNotify",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/notification/reply": {
      "post": {
        "tags": [
          "notification"
        ],
        "summary": "Reply to a conversation.",
        "description": "Reply to a conversation by adding a note.",
        "operationId": "notificationReply",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationReplyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${notification_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) {\"operation\":\"reply\", \"text\":\"$body.get('text')\", #if($body.containsKey('step_name'))\"step_name\":\"$body.get('step_name')\",#end #if($body.containsKey('conversation_id'))\"conversation_id\":\"$body.get('conversation_id')\",#end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsNotify",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/notification/add_user": {
      "post": {
        "tags": [
          "notification"
        ],
        "summary": "Add a user to a conversation.",
        "description": "Add a user to a conversation.",
        "operationId": "notificationAddUser",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${notification_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) {\"operation\":\"add_user\", #if($body.containsKey('user_id'))\"user_id\":\"$body.get('user_id')\",#end #if($body.containsKey('conversation_id'))\"conversation_id\":\"$body.get('conversation_id')\",#end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsNotify",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/notification/conversations": {
      "get": {
        "tags": [
          "notification"
        ],
        "summary": "Get a list of conversations.",
        "description": "Get a list of conversations for the current user. By default sorted by most recent first.",
        "operationId": "notificationConversations",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${notification_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "{\"operation\":\"conversations\", \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsNotify",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/notification/conversation/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "UUID of conversation to read.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "detailed",
          "in": "query",
          "description": "Flag to define level of detail in notifications. Defaults to false (communication only).",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "step_name",
          "in": "query",
          "description": "UUID of step to filter notifications by.",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "notification"
        ],
        "summary": "Read a conversation.",
        "description": "Read a conversation, returned as a list of notes ordered by most recent first, and marks the conversation as read for the current user.",
        "operationId": "notificationConversation",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${notification_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"operation\":\"conversation\", \"conversation_id\":\"$req.path.get('id')\", \"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end}, \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsNotify",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/notification/subscribe": {
      "post": {
        "tags": [
          "notification"
        ],
        "summary": "Subscribe or unscubscribe to an event",
        "description": "Subscribe or unsubscribe to events raised by given entities.",
        "operationId": "subscribe",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${subscribe_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req=$input.params()) { #foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end,\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsSubscribe",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/module": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Get list of available modules",
        "description": "Gets a list of all registered modules with a UI",
        "operationId": "moduleList",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type" : "object"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${module_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "{\"operation\":\"list\"}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsModuleList",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/module/{module}": {
      "parameters": [
        {
          "name": "module",
          "in": "path",
          "description": "Unique name of module",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Get module UI",
        "description": "Returns the UI component of the requested module.",
        "operationId": "moduleInterface",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${module_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"operation\":\"interface\",\"module\": \"$req.path.get('module')\",\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Content-Type": "'text/html'"
              },
              "responseTemplates": {
                "application/json": "$input.path('$')"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "module"
        ],
        "summary": "Send request to a module",
        "description": "Send a request payload to a module.",
        "operationId": "moduleRequest",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${module_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"operation\":\"request\",\"module\":\"$req.path.get('module')\" \"payload\": $input.body,\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsModule",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/action/invoke": {
      "post": {
        "tags": [
          "action"
        ],
        "summary": "Invoke an action.",
        "description": "Invoke an action to be processed on a given submission.",
        "operationId": "actionInvoke",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionInvokeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${invoke_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "$input.json('$')"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsInvoke",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/action/register": {
      "post": {
        "tags": [
          "action"
        ],
        "summary": "Register an action",
        "description": "Register a new custom action.",
        "operationId": "actionRegister",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${register_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "$input.json('$')"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsRegister",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/user/{operation}": {
      "parameters": [
        {
          "name": "operation",
          "in": "path",
          "description": "Which user operation to perform.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["find", "add_group", "remove_group", "add_role", "remove_role", "add_permission", "create", "get_users"]
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get user(s)",
        "description": "Returns list of users or a single user by id",
        "operationId": "userOperationGet",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Unique id of user to find.",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of user to search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of user to search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${user_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) {\"operation\":\"$req.path.get('operation')\", #foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\", #end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Perform an operation on a User",
        "description": "Perform an operation for a User account, i.e. add or remove a Group, add or remove a Role.",
        "operationId": "userOperationPost",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${user_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) #set($inputRoot = $input.path('$')) {\"operation\":\"$req.path.get('operation')\", #if($body.containsKey('id'))\"id\":\"$body.get('id')\",#end #if($body.containsKey('group_id'))\"group_id\":\"$body.get('group_id')\",#end #if($body.containsKey('role_id'))\"role_id\":\"$body.get('role_id')\", #end #if($body.containsKey('detailed'))\"detailed\":\"$body.get('detailed')\", #end #if($body.containsKey('ids'))\"ids\":$inputRoot.ids, #end #if($body.containsKey('group_ids'))\"group_ids\":$inputRoot.group_ids,#end #if($body.containsKey('role_ids'))\"role_ids\":$inputRoot.role_ids,#end #if ($body.containsKey('username'))\"username\":\"$body.get('username')\",#end #if ($body.containsKey('name'))\"name\":\"$body.get('name')\",#end #if ($body.containsKey('email'))\"email\":\"$body.get('email')\",#end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsUser",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/submission/{operation}": {
      "parameters": [
        {
          "name": "operation",
          "in": "path",
          "description": "Which submission operation to perform using the Service Authorizer authentication.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["initialize", "active", "inactive", "apply", "metadata", "submit", "save", "review", "resume", "lock",
              "unlock", "withdraw", "restore", "changeStep", "addContributors", "removeContributor", "copySubmission"]
          }
        },
        {
          "name": "submissionid",
          "in": "header",
          "description": "Describes the submission id of the request which granted the service temporary API Authentication.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "tags": [
          "submission"
        ],
        "summary": "Service endpoint- Perform an operation on a Submission",
        "description": "Perform an operation for a Submission, i.e. initialize, save, submit, review using the service authorizer.",
        "operationId": "submissionOperation",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOperationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Service_Authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${submission_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) #set($inputRoot = $input.path('$')) {\"operation\":\"$req.path.get('operation')\", #if($body.containsKey('id'))\"id\":\"$body.get('id')\",#end #if($body.containsKey('form_id'))\"form_id\":\"$body.get('form_id')\",#end #if($body.containsKey('daac_id'))\"daac_id\":\"$body.get('daac_id')\",#end #if($body.containsKey('workflow_id'))\"workflow_id\":\"$body.get('workflow_id')\",#end #if($body.containsKey('contributor_id'))\"contributor_id\":\"$body.get('contributor_id')\",#end #if ($body.containsKey('contributor_ids'))\"contributor_ids\":$inputRoot.contributor_ids,#end #if ($body.containsKey('data'))\"data\":$input.json('$.data'), #end #if($body.containsKey('metadata'))\"metadata\":$input.json('$.metadata'),#end #if($body.containsKey('approve'))\"approve\":\"$body.get('approve')\", #end #if($body.containsKey('context'))\"context\":\"$body.get('context')\", #end #if($body.containsKey('step_name'))\"step_name\":\"$body.get('step_name')\", #end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsSubmission",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/metrics": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Fetches metrics",
        "description": "Operation to retrieve metrics for display on dashboard.",
        "operationId": "searchMetrics",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start of the time range to view",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End of the time range to view",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "Type of events to view, e.g. workflow_transitions, errors, logins",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "True will return a count of events of the given type within the time range, false will return the individual events and their associated data.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${metrics_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req=$input.params()) { \"operation\": \"search\", \"filter\": { #foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end } ,\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "metrics"
        ],
        "summary": "Post a client-side event.",
        "description": "Sends a client-side event to the system to be logged. Typically this would be an error.",
        "operationId": "putMetric",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogEventRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${metrics_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $input.json('$')) {\"operation\": \"put\", \"payload\": $body, \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsMetrics",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/metrics/report/{key}": {
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "description": "Unique key of metrics report to fetch",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      ],
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Get a metrics report",
        "description": "Returns a single metrics report by its unique key",
        "operationId": "metricsGetReport",
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "schema": { "type": "string" }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${metrics_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req=$input.params()) { \"operation\": \"get_report\", \"key\": \"$req.path.get('key')\",\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsMetricsGetReport",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/metrics/reports": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Fetches list of metrics reports",
        "description": "Operation to retrieve a list of available metrics reports.",
        "operationId": "metricsListReports",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of number of results",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${metrics_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "{ \"operation\": \"list_reports\" ,\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsMetricsListReports",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/token": {
      "get": {
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Authorization code from identity provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "A redirect url to redirect to after successful authentication.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logout",
            "in": "query",
            "description": "Set to true to get redirect uri to logout through identity provider.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "Authentication and token management",
        "description": "Handles authentication and token management with an identity provider.",
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${auth_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req=$input.params()) {#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end  }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsToken",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/token/refresh": {
      "get": {
        "tags": [
          "token"
        ],
        "summary": "Authentication and token management",
        "description": "Handles authentication and token management with an identity provider.",
        "operationId": "refreshToken",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${auth_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req=$input.params()) { \"refresh\": true, \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsToken",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/version": {
      "get": {
        "tags": [
          "version"
        ],
        "summary": "Get version",
        "description": "Returns the current API version for compatibility checks.",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Version"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${version_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsVersion",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/pages": {
      "get": {
        "tags": [
          "pages"
        ],
        "summary": "Get page for the overview app",
        "description": "Returns the frontpage content",
        "operationId": "pageFindAll",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "{\"resource\":\"page\",\"operation\":\"findAll\"}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/api/pages/{page_key}": {
      "parameters": [
        {
          "name": "page_key",
          "in": "path",
          "description": "Unique key identifier of page",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "pages"
        ],
        "summary": "Get page for the overview app",
        "description": "Returns page for the overview app",
        "operationId": "pageFindById",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "500": {
            "description": "Bad request"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${data_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"page\",\"operation\":\"findById\",\"params\":{\"page_key\": \"$req.path.get('page_key')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Serve the overview app.",
        "description": "Serves the static files for the overview single page app.",
        "operationId": "getOverviewApp",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-west-2:s3:path/${edpub_overview_s3_bucket}/index.html",
          "credentials": "${edpub_apigateway_s3_role_arn}",
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/{key+}": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Serve the overview app.",
        "description": "Serves the static files for the overview single page app.",
        "operationId": "getOverviewAppSubpath",
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "schema": { "type": "string" }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-west-2:s3:path/${edpub_overview_s3_bucket}/{key}",
          "credentials": "${edpub_apigateway_s3_role_arn}",
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "requestTemplates": {
            "application/json": "#set($mappings = {\"default\": \"index.html\", \"index.html\": \"index.html\"}) #set($key = $method.request.path.key) #if ($mappings.containsKey($key)) #set($context.requestOverride.path.key = $mappings.get($key)) #else #set($context.requestOverride.path.key = $mappings.get('default')) #end"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/dashboard": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Serve the dashboard app.",
        "description": "Serves the static files for the dashboard single page app.",
        "operationId": "getDashboardApp",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-west-2:s3:path/${edpub_dashboard_s3_bucket}/index.html",
          "credentials": "${edpub_apigateway_s3_role_arn}",
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/dashboard/{key+}": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Serve the dashboard app.",
        "description": "Serves the static files for the dashboard single page app.",
        "operationId": "getDashboardAppSubpath",
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "schema": { "type": "string" }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-west-2:s3:path/${edpub_dashboard_s3_bucket}/{key}",
          "credentials": "${edpub_apigateway_s3_role_arn}",
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "requestTemplates": {
            "application/json": "#set($mappings = {\"default\": \"index.html\", \"index.html\": \"index.html\"}) #set($key = $method.request.path.key) #if ($mappings.containsKey($key)) #set($context.requestOverride.path.key = $mappings.get($key)) #else #set($context.requestOverride.path.key = $mappings.get('default')) #end"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/forms": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Serve the forms app.",
        "description": "Serves the static files for the forms single page app.",
        "operationId": "getFormsApp",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-west-2:s3:path/${edpub_forms_s3_bucket}/index.html",
          "credentials": "${edpub_apigateway_s3_role_arn}",
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/forms/{key+}": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Serve the forms app.",
        "description": "Serves the static files for the forms single page app.",
        "operationId": "getFormsAppSubpath",
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "schema": { "type": "string" }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:us-west-2:s3:path/${edpub_forms_s3_bucket}/{key}",
          "credentials": "${edpub_apigateway_s3_role_arn}",
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "requestTemplates": {
            "application/json": "#set($mappings = {\"default\": \"index.html\", \"index.html\": \"index.html\"}) #set($key = $method.request.path.key) #if ($mappings.containsKey($key)) #set($context.requestOverride.path.key = $mappings.get($key)) #else #set($context.requestOverride.path.key = $mappings.get('default')) #end"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      }
    },
    "/api/data/questions": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get questions",
        "description": "Returns list of questions",
        "operationId": "questionFindAll",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "What field to sort results on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of results, 'asc' for ascending, 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page for pagination.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to start at for pagination.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${questions_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"resource\":\"question\",\"operation\":\"findAll\",\"params\":{#foreach($field in $req.querystring.keySet()) \"$field\":\"$req.querystring.get($field)\" #if($foreach.hasNext),#end #end},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Creates a question",
        "description": "Creates a new question.",
        "operationId": "questionAdd",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${questions_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "{\"resource\":\"question\",\"operation\":\"add\",\"params\":{\"payload\": $input.json(\"$\")},\"context\":{\"user_id\": \"$context.authorizer.claims.sub\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsDataQuestions",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/upload/{operation}": {
      "parameters": [
        {
          "name": "operation",
          "in": "path",
          "description": "Which submission operation to perform.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["getPostUrl"]
          }
        }
      ],
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Perform upload operations.",
        "description": "Generate signed links for upload.",
        "operationId": "fileUpload",
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOperationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${file_upload_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set($req = $input.params()) #set($body = $util.parseJson($input.body)) #set($inputRoot = $input.path('$')) {\"operation\":\"$req.path.get('operation')\", #if($body.containsKey('file_name'))\"file_name\":\"$body.get('file_name')\",#end #if($body.containsKey('file_type'))\"file_type\":\"$body.get('file_type')\",#end #if($body.containsKey('submission_id'))\"submission_id\":\"$body.get('submission_id')\",#end #if($body.containsKey('checksum_value'))\"checksum_value\":\"$body.get('checksum_value')\",#end \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPERATION method for CORS",
        "operationId": "optionsFileUpload",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    },
    "/api/data/upload/list/{submission_id}": {
      "parameters": [
        {
          "name": "submission_id",
          "in": "path",
          "description": "UUID of submission upload.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get uploads from a submission.",
        "description": "This endpoint returns a list of uploads for a given submission.",
        "operationId": "listFiles",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
                
              }
            }
          }
      },
        "security": [
          {
            "Cognito_Authorizer": ["openid"]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${file_upload_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws",
          "requestTemplates": {
            "application/json": "#set( $req = $input.params()) {\"operation\":\"listFiles\", \"submission_id\":\"$req.path.get('submission_id')\", \"context\":{\"user_id\":\"$context.authorizer.claims.sub\", \"user_email\": \"$context.authorizer.claims.email\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              }
            }
          }
        },
        "x-router-controller": "proxy"
      },
      "options": {
        "tags": [
          "cors"
        ],
        "summary": "CORS",
        "description": "OPTIONS method for CORS",
        "operationId": "optionsNotify",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200 }"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              },
              "responseTemplates": {
                "application/json": "{}"
              }
            }
          }
        },
        "x-router-controller": "cors"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Cognito_Authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "This authorizer is used for most requests to the EDPub API with the exception of service endpoints. The authorization value follows the format: 'Bearer \\<JWT token value\\>'",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "type": "cognito_user_pools",
          "providerARNs": [ "${cognito_user_pool_arn}" ]
        }
      },
      "Service_Authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "This authorizer is used for authentication for service enabled endpoints. The authorization value format is: 'Basic \\<value of encoding serviceId:serviceSecret using base64\\>'",
        "x-amazon-apigateway-authtype" : "custom",
        "x-amazon-apigateway-authorizer" : {
          "type" : "request",
          "authorizerUri" : "${service_authorizer_lambda_arn}",
          "authorizerPayloadFormatVersion" : "1.0",
          "identitySource" : "method.request.header.authorization, method.request.header.submissionid",
          "authorizerResultTtlInSeconds" : "300"
        }
      }
    },
    "schemas": {}
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
