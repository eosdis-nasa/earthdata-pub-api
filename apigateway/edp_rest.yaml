swagger: "2.0"
info:
  description: "This is the API that serves as the central interaction point between the client
    and back-end services of Earthdata Pub."
  version: "1.0.0"
  title: "Earthdata Pub API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "dummy@dummy.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "*"
basePath: "/pub"
tags:
- name: "question"
  description: "Operations for form question management"
  externalDocs:
    description: "Read the docs"
    url: "http://questions.docs/#TODO"
- name: "form"
  description: "Operations for form template management"
  externalDocs:
    description: "Read the docs"
    url: "http://form.docs/#TODO"
schemes:
- "https"

paths:
  /question:
    get:
      tags:
      - "question"
      summary: "Returns all available questions"
      description: "Returns all individual questions that are available"
      operationId: "getQuestions"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              actions:
                type: "array"
                items:
                  $ref: "#/definitions/Question"
    post:
      tags:
      - "question"
      summary: "Create or update a question"
      description: "Creates a new question or updates an existing question"
      operationId: "postQuestion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Question"
        404:
          description: "Resource not found"

  /question/{questionId}:
    get:
      tags:
      - "question"
      summary: "Returns a single question"
      description: "Returns a single question with the given ID"
      operationId: "getQuestion"
      produces:
      - "application/json"
      parameters:
      - name: "questionId"
        in: "path"
        description: "ID of question to retrieve"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Question"
        404:
          description: "Resource not found"
    delete:
      tags:
      - "question"
      summary: "Deletes question by ID"
      description: "Deletes a question by its ID"
      operationId: "deleteQuestion"
      produces:
      - "application/json"
      parameters:
      - name: "questionId"
        in: "path"
        description: "ID of question to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Deleted"
        404:
          description: "Resource not found"

  /form:
    get:
      tags:
      - "form"
      summary: "Returns form templates"
      description: "Returns a list of all form templates"
      operationId: "getForms"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              forms:
                type: "array"
                items:
                  $ref: "#/definitions/Form"
    post:
      tags:
      - "form"
      summary: "Create or update a form"
      description: "Creates a new form template or updates an existing form template"
      operationId: "postForm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Form"
        404:
          description: "Resource not found"

  /form/{formId}:
    get:
      tags:
      - "form"
      summary: "Returns a single form template"
      description: "Returns a single form template with the given ID"
      operationId: "getForm"
      produces:
      - "application/json"
      parameters:
      - name: "formId"
        in: "path"
        description: "ID of form template to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Form"
        404:
          description: "Resource not found"
    delete:
      tags:
      - "form"
      summary: "Deletes form by ID"
      description: "Deletes form template by its ID"
      operationId: "deleteForm"
      produces:
      - "application/json"
      parameters:
      - name: "formId"
        in: "path"
        description: "ID of form template to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Deleted"
        404:
          description: "Resource not found"

definitions:
  Form:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      questions:
        type: "object"
  Question:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      content:
        type: "object"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
